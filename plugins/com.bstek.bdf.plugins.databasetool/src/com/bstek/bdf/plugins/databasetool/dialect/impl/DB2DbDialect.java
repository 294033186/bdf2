/*
 * This file is part of BDF
 * BDFï¼ŒBstek Development Framework
 * Copyright 2002-2013, BSTEK
 * Dual licensed under the Bstek Commercial or GPL Version 2 licenses.
 * http://www.bstek.com/
 */
package com.bstek.bdf.plugins.databasetool.dialect.impl;

import com.bstek.bdf.plugins.databasetool.dialect.ColumnTypeConstants;
import com.bstek.bdf.plugins.databasetool.dialect.DbType;
import com.bstek.bdf.plugins.databasetool.model.Column;
import com.bstek.bdf.plugins.databasetool.model.Table;

public class DB2DbDialect extends CommonDialect {

	public DB2DbDialect() {
		this.setColumnTypeRegister(new DB2ColumnTypeRegister());
	}

	@Override
	public String getDbType() {
		return DbType.DB2.name();
	}

	@Override
	public String getJdbcDriverName() {
		return "com.ibm.db2.jcc.DB2Driver";
	}

	@Override
	public String getUrlTemplate() {
		return "jdbc:db2://<SERVER NAME>:<PORT>/<DB NAME>";
	}

	@Override
	public int getDefaultPort() {
		return 50000;
	}

	@Override
	public String getDefaultColumnType() {
		return ColumnTypeConstants.VARCHAR;
	}

	@Override
	public boolean supportAutoIncrement() {
		return true;
	}

	@Override
	public String getAutoIncrmentDefinatin() {
		return "GENERATED BY DEFAULT AS IDENTITY";
	}

	@Override
	public boolean supportAppendConstraintRestrict() {
		return true;
	}

	@Override
	public boolean supportAppendCommentDefination() {
		return true;
	}

	@Override
	public String getAddColumnDefination(Table table, Column column) {
		StringBuilder sb = new StringBuilder();
		String tableName = table.getName();
		sb.append(" ALTER TABLE " + tableName + " ADD COLUMN ");
		String columnDefination = getColumnDefination(column, false);
		sb.append(columnDefination);
		if (column.isPk()) {
			sb.append(";");
			sb.append(getDropPrimaryKeyDefination(table, null));
			sb.append(";");
			sb.append(getAlertPrimaryKeyDefination(table, null));
		}

		return sb.toString();
	}

	@Override
	public String getUpdateColumnDefination(Table table, Column column) {
		StringBuilder sb = new StringBuilder();
		String tableName = table.getName();
		sb.append(" ALTER TABLE  " + tableName + " ALTER COLUMN  ");
		sb.append(column.getName() + " SET DATA TYPE ");
		sb.append(getColumnTypeDefination(column));
		if (column.isNotNull()) {
			sb.append(" NOT NULL");
		} else {
			sb.append(" NULL");
		}
		return sb.toString();
	}

	@Override
	public String getUpdateColumnIsNullDefination(Table table, Column column) {
		return "";
	}

	@Override
	public String getUpdateColumnNotNullDefination(Table table, Column column) {
		return "";
	}

}
